<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/hibernate" />
		<property name="username" value="user" />
		<property name="password" value="woda13" />
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="mappingResources">
			<list>
				<value>./dictionary.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="mySession" class="org.hibernate.Session" factory-bean="mySessionFactory"
		factory-method="openSession" destroy-method="close" scope="prototype">
	</bean>
	
	<bean id="myGenerator" class="datasource.GeneratorImpl" scope="prototype">
		<property name="rand">
			<bean id="Random" class="java.util.Random"/>
		</property>
	</bean>

	<bean id="myAbstractDatasource" class="datasource.AbstractDatasource" scope="prototype" abstract="true">
		<property name="generator" ref="myGenerator" />
	</bean>

	<bean id="myDictionarytDatasource" class="datasource.DictionarytDatasourceImpl" parent="myAbstractDatasource" scope="prototype">
	</bean>
	
	<bean id="myAbstractDao" class="dao.AbstractDao" scope="prototype" abstract="true">
	</bean>

	<bean id="myDictionaryDao" class="dao.DictionaryDaoImpl" parent="myAbstractDao" scope="prototype">
	</bean>
	
	<bean id="myClientDao" class="dao.ClientDaoImpl" parent="myAbstractDao" scope="prototype">
	</bean>
	
	<bean id="myAbstractServiceManager" class="manager.AbstractServiceManager" scope="prototype" abstract="true">
		<property name="dictionaryDao" ref="myDictionaryDao" />
		<property name="clientDao" ref="myClientDao" />
	</bean>

	<bean id="myServiceManager" class="manager.ServiceManagerImpl" parent="myAbstractServiceManager" scope="prototype">
	</bean>
	
	<bean id="myAbstractService" class="service.AbstractService" scope="prototype" abstract="true">
		<property name="session">
			<ref bean="mySession"/>
		</property>
		<property name="dictionaryDao">
			<ref bean="myDictionaryDao"/>
		</property>
		<property name="clientDao">
			<ref bean="myClientDao"/>
		</property>
		<property name="serviceManager">
			<ref bean="myServiceManager"/>
		</property>
	</bean>

	<bean id="myAddWordService" parent="myAbstractService" class="service.AddWordService" scope="prototype">
	</bean>
	
	<bean id="myFindWordService" parent="myAbstractService" class="service.FindWordService" scope="prototype">
	</bean>
	
	<bean id="myAddTranslationsToWordService" parent="myAbstractService" class="service.AddTranslationsToWordService" scope="prototype">
	</bean>
	
	<bean id="myAddExamplesToWordService" parent="myAbstractService" class="service.AddExamplesToWordService" scope="prototype">
	</bean>
	
	<bean id="myDeleteWordService" parent="myAbstractService" class="service.DeleteWordService" scope="prototype">
	</bean>
</beans>
